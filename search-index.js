var searchIndex = JSON.parse('{\
"kafka_json_processor_core":{"doc":"","t":[4,13,13,3,11,11,11,11,11,11,0,0,0,11,11,11,11,0,12,5,0,12,12,11,11,11,11,11,11,11,12,12,12,3,3,11,11,11,11,12,11,11,11,11,12,11,11,11,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,12,13,4,13,13,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,0,0,5,5,13,13,4,8,3,6,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,11,11,11,12,12,12,11,5,11,11,11,11,11,11,11,11,11,11,12,12,5,5],"n":["PendingMessage","Processed","Received","Stream","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","config","error","formatters","from","from","into","into","processor","processors","run_processor","simulation","source_topic","target_topic","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","id","message","topic","Config","InternalConfig","borrow","borrow","borrow_mut","borrow_mut","channel_capacity","clone","clone","clone_into","clone_into","consumer_config","default","from","from","internal_config","into","into","producer_config","queue_size","queue_slowdown_ms","read_from","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","worker_threads","EmptyKey","ErrorKind","FieldNotFound","InvalidObjectTree","OtherError","ProcessingError","ProcessorSkipped","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","from","from","from","from","from","inner","into","into","new","provide","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","err","invalid_key","key","reason","reason","json","xml","pretty_json","pretty_xml","Index","Key","ObjectKey","ObjectTree","OutputMessage","ProcessingResult","Processor","SerializedOutputMessage","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","fmt","from","from","from","get_val","get_val","insert_val","insert_val","into","into","into","key","key","message","new","process_payload","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","0","simulate_streams","simulate_streams_from_default_folder"],"q":["kafka_json_processor_core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kafka_json_processor_core::PendingMessage","","","kafka_json_processor_core::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kafka_json_processor_core::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kafka_json_processor_core::error::ErrorKind","","","","","kafka_json_processor_core::formatters","","kafka_json_processor_core::formatters::json","kafka_json_processor_core::formatters::xml","kafka_json_processor_core::processor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kafka_json_processor_core::processor::ObjectKey","","kafka_json_processor_core::simulation",""],"d":["","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Object key is empty - this should not be allowed. This …","","Low priority error - Field not found and thus, cannot use …","Key is invalid for given object.  This may mean that …","Default wrapper for any error.","","Lowe priority error - processor was skipped for any …","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Naive implementation of pretty JSON. Not so accurate, but …","Naive implementation of pretty XML. Not so accurate, but …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","",""],"i":[0,23,23,0,23,1,23,1,1,1,0,0,0,23,1,23,1,0,1,0,0,1,1,1,23,1,23,1,23,1,24,24,24,0,0,6,7,6,7,7,6,7,6,7,6,7,6,7,6,6,7,6,7,7,6,6,7,6,7,6,7,6,7,7,15,0,15,15,15,0,15,12,15,12,15,12,12,15,15,12,12,15,15,15,12,12,15,12,12,12,15,12,15,12,15,12,15,25,26,27,26,28,0,0,0,0,18,18,0,0,0,0,0,0,19,21,18,19,21,18,18,18,19,18,19,21,18,29,19,29,19,19,21,18,19,21,21,19,0,18,19,21,18,19,21,18,19,21,18,30,31,0,0],"f":[0,0,0,0,[[]],[[]],[[]],[[]],[1,1],[[]],0,0,0,[[]],[[]],[[]],[[]],0,0,[[[3,[2,1]]]],0,0,0,[[]],[[],4],[[],4],[[],4],[[],4],[[],5],[[],5],0,0,0,0,0,[[]],[[]],[[]],[[]],0,[6,6],[7,7],[[]],[[]],0,[[],7],[[]],[[]],0,[[]],[[]],0,0,0,[[[9,[8]]],[[4,[6,[11,[10]]]]]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],5],[[],5],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[12,13],14],[[12,13],14],[[15,13],14],[[15,13],14],[15,12],[[]],[16],[[]],[10,15],0,[[]],[[]],[15,12],[17],[[],2],[[],2],[[],4],[[],4],[[],4],[[],4],[[],5],[[],5],0,0,0,0,0,0,0,[2,2],[2,2],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[18,18],[[]],[[],19],[[18,13],14],[[]],[[]],[[]],[[],[[4,[20,12]]]],[19,[[4,[20,12]]]],[20,[[4,[12]]]],[[19,20],[[4,[12]]]],[[]],[[]],[[]],0,0,0,[[],19],[2,[[22,[21]]]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],5],[[],5],[[],5],0,0,[[[3,[2,1]],[9,[8]]]],[[[3,[2,1]]]]],"p":[[3,"Stream"],[3,"String"],[3,"HashMap"],[4,"Result"],[3,"TypeId"],[3,"Config"],[3,"InternalConfig"],[3,"Path"],[8,"AsRef"],[8,"Error"],[3,"Box"],[3,"ProcessingError"],[3,"Formatter"],[6,"Result"],[4,"ErrorKind"],[15,"never"],[3,"Demand"],[4,"ObjectKey"],[3,"OutputMessage"],[4,"Value"],[3,"SerializedOutputMessage"],[6,"ProcessingResult"],[4,"PendingMessage"],[13,"Processed"],[13,"OtherError"],[13,"InvalidObjectTree"],[13,"FieldNotFound"],[13,"ProcessorSkipped"],[8,"ObjectTree"],[13,"Index"],[13,"Key"]]},\
"kjp_generator":{"doc":"","t":[3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,5,11,11,11,11,11,11,11,11,11,11,17,17,13,13,3,4,13,11,11,11,11,5,11,11,11,11,11,11,11,11,11,12,12,5,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,5,5],"n":["Stream","Template","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","from","from","into","into","processors","project","read_and_parse_and_generate","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","FIELD_KEY","GENERATOR_KEY","GeneratorError","GeneratorUnknown","Processor","ProcessorGenerationError","RequiredConfigNotFound","borrow","borrow","borrow_mut","borrow_mut","create_processor_generators","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","function_body","function_name","generate_processors","into","into","provide","to_string","try_from","try_from","try_into","try_into","type_id","type_id","description","description","field_name","function_name","name","generate_cargo","generate_main"],"q":["kjp_generator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kjp_generator::processors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kjp_generator::processors::ProcessorGenerationError","","","","","kjp_generator::project",""],"d":["","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Reads template, parses it and generated project based on …","","","","","","","","","","","","","","","","","","","","","","Creates a map of code generators from given path.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Generates code for all processors in a stream.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","",""],"i":[0,0,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,0,0,0,1,2,1,2,1,2,1,2,1,2,0,0,17,17,0,0,17,16,17,16,17,0,16,17,16,17,16,17,17,16,17,16,16,0,16,17,17,17,16,17,16,17,16,17,21,22,21,21,23,0,0],"f":[0,0,[[]],[[]],[[]],[[]],[1,1],[2,2],[[]],[[]],[[],[[3,[1]]]],[[],[[3,[2]]]],[[1,1],4],[[2,2],4],[[],4],[[],4],[[1,5],6],[[2,5],6],[[]],[[]],[[]],[[]],0,0,[[[8,[7]],[8,[7]],[10,[9]],[8,[7]]],[[3,[[12,[11]]]]]],[1,3],[2,3],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],13],[[],13],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[[8,[7]]],[[3,[[15,[9,14]],[12,[11]]]]]],[[16,16],4],[[17,17],4],[[],4],[[],4],[[16,5],6],[[17,5],6],[[17,5],6],[[]],[[]],0,0,[[2,15],[[3,[[18,[16]],[12,[11]]]]]],[[]],[[]],[19],[[],9],[[],3],[[],3],[[],3],[[],3],[[],13],[[],13],0,0,0,0,0,[[1,[10,[9]]],9],[[[20,[[18,[16]]]]],9]],"p":[[3,"Template"],[3,"Stream"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Path"],[8,"AsRef"],[3,"String"],[4,"Option"],[8,"Error"],[3,"Box"],[3,"TypeId"],[3,"PathBuf"],[3,"HashMap"],[3,"Processor"],[4,"ProcessorGenerationError"],[3,"Vec"],[3,"Demand"],[3,"BTreeMap"],[13,"RequiredConfigNotFound"],[13,"GeneratorError"],[13,"GeneratorUnknown"]]},\
"kjp_generator_plugin":{"doc":"","t":[4,13,8,13,3,13,11,11,11,11,12,11,10,11,11,11,11,12,11,11,5,11,11,5,5,11,11,11,11,11,11,11,12,12,12,12,12,12],"n":["GeneratorError","InvalidGeneratorArguments","JsonFieldName","OtherError","ProcessorParams","RequiredConfigNotFound","borrow","borrow","borrow_mut","borrow_mut","config","eq","escape_for_json","fmt","fmt","from","from","function_name","into","into","json_path_to_object_key","new_from","provide","read_params","return_generated","to_string","try_from","try_from","try_into","try_into","type_id","type_id","args","description","description","description","field_name","function_name"],"q":["kjp_generator_plugin","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kjp_generator_plugin::GeneratorError","","","","",""],"d":["","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Function to generate valid ObjectKey accessor from …","","","","","","","","","","","","","","","","",""],"i":[0,1,0,1,0,1,9,1,9,1,9,1,12,1,1,9,1,9,9,1,0,1,1,0,0,1,9,1,9,1,9,1,13,13,14,15,14,14],"f":[0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,[[1,1],2],[[],3],[[1,4],5],[[1,4],5],[[]],[[]],0,[[]],[[]],[6,3],[7,1],[8],[[],[[10,[9,1]]]],[[]],[[],3],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],0,0,0,0,0,0],"p":[[4,"GeneratorError"],[15,"bool"],[3,"String"],[3,"Formatter"],[6,"Result"],[15,"str"],[8,"Error"],[3,"Demand"],[3,"ProcessorParams"],[4,"Result"],[3,"TypeId"],[8,"JsonFieldName"],[13,"InvalidGeneratorArguments"],[13,"RequiredConfigNotFound"],[13,"OtherError"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
